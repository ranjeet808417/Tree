#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;

};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        
        return temp;
}
void BST_keyINgivenRange(bstnode* root,int k1,int k2){

if(root==NULL){
        return ;
}
if(root->data >k1){
        BST_keyINgivenRange(root->left,k1,k2);
}
if(root->data >=k1 && root->data <=k2){
        cout<<root->data<<" ";
}

 if(root->data <k2){
       BST_keyINgivenRange(root->right,k1,k2);
}

}

bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}



int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);


   int k1=7,k2=14;
   BST_keyINgivenRange(root,k1,k2);

}

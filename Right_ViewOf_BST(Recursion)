#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        return temp;
      }

void print_rightView(bstnode* root,int level,int *maxlevel){
if(root==NULL){
  return;
}
if(level > *maxlevel){
cout<<root->data<<" ";
*maxlevel=level;
}

print_rightView(root->right,level+1,maxlevel);
print_rightView(root->left,level+1,maxlevel);

}
bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}


int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);
root=insert(root,15);
root=insert(root,12);
root=insert(root,11);
root=insert(root,16);
int maxlevel=0;
print_rightView(root,1,&maxlevel);
}

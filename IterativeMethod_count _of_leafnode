#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        return temp;
}

bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}

int count_leafnode(bstnode* root){
queue<bstnode*>q;
q.push(root);
int count=0;
while(!q.empty()){
bstnode* temp=q.front();
q.pop();
if(temp->left==NULL && temp->right==NULL){
        count++;
}
if(temp->left){
        q.push(temp->left);

}
if(temp->right){
        q.push(temp->right);
}

}
return count;
}

int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);
root=insert(root,15);

cout<<count_leafnode(root);

}

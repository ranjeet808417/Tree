#include <iostream>
#include<climits>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
bstnode* nextright;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        temp->nextright=NULL;
        return temp;
}
int leafToleaf_maxsum(bstnode* root,int* ans){
if(root==NULL){
        return 0;
}
int left=leafToleaf_maxsum(root->left,ans);
int right=leafToleaf_maxsum(root->right,ans);
int temp=max(left,right)+root->data;
*ans=max(*ans,left+right+root->data);

return temp;
}

bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}



int main() {
bstnode* root=NULL;
/*root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);*/
/*root = insert(root, -5); 
    root = insert(root, -7); 
   
    root = insert(root, 12); 
    root = insert(root, 11); 
    root = insert(root, 15); */
    /* root = insert(root, 10); 
    root = insert(root, 14); */
/*root = insert(root, 10); 
    root = insert(root, 13); 
    root = insert(root, 14); 
    root = insert(root, 15); 
    root = insert(root, 9); 
     root = insert(root, 8); 
root = insert(root, 7); */
   // root = insert(root, 13); 
    root = getnewnode(-15); 
    root->left = getnewnode(5); 
    root->right = getnewnode(6); 
    root->left->left = getnewnode(-8); 
    root->left->right = getnewnode(1); 
    root->left->left->left = getnewnode(2); 
    root->left->left->right = getnewnode(6); 
    root->right->left = getnewnode(3); 
    root->right->right = getnewnode(9); 
    root->right->right->right= getnewnode(0); 
    root->right->right->right->left= getnewnode(4); 
    root->right->right->right->right= getnewnode(-1); 
    root->right->right->right->right->left= getnewnode(10); 
int ans=INT_MIN;
leafToleaf_maxsum(root,&ans);
cout<<ans;
}

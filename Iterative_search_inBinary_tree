#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
bstnode* nextright;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        temp->nextright=NULL;
        return temp;
}
void print(vector<int>v,int i){
        for(int j=i;j<v.size();j++){
                cout<<v[j]<<"->";

        }
cout<<endl;
}
bool search(bstnode* root,int val){
if(!root){
  return false;      
}
queue<bstnode*>q;
q.push(root);
while(!q.empty()){
bstnode* temp=q.front();
q.pop();
if(temp->data==val){
        return true;
}
if(temp->left){
        q.push(temp->left);
}
if(temp->right){
        q.push(temp->right);
}
}
return false;

}

bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}



int main() {
bstnode* root=NULL;
root=getnewnode(1);
root->left=getnewnode(7);
root->right=getnewnode(3);
root->right->left=getnewnode(5);
root->right->right=getnewnode(4);

   
   cout<<search(root,16);

}

#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};

bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        return temp;
}
bool check_forSymmetryBinary_tree(bstnode* root1,bstnode* root2){
queue<bstnode*>q1;
queue<bstnode*>q2;
q1.push(root1);
q2.push(root2);

while(!q1.empty()){
bstnode* temp1=q1.front();
bstnode* temp2=q2.front();
q1.pop();
q2.pop();
if(!temp1 && !temp2){
        return true;
}
if((temp1==NULL && temp2!=NULL) || (temp1!=NULL && temp2==NULL)){
        return false;
}
if(temp1->data !=temp2->data){
        return false;
}
q1.push(temp1->left);
q2.push(temp2->right);
q1.push(temp1->right);
q2.push(temp2->left);



}


return true;

}

int main() {
  bstnode* root=NULL;
  root=getnewnode(1);
  root->left=getnewnode(2);
  root->right=getnewnode(2);
  root->left->left=getnewnode(3);
  root->left->right=getnewnode(4);
  root->right->left=getnewnode(4);
  root->right->right=getnewnode(3);
  cout<< check_forSymmetryBinary_tree(root->left,root->right);
}

#include <iostream>
#include<vector>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};

bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->right=NULL;
        temp->left=NULL;
        return temp;
}
int  children_sumproperty(bstnode* root){
int left=0;
int right=0;
if(root==NULL){
        return 1;
}
else if(root->left==NULL && root->right==NULL){
        return 1;
}
if(root->left){
        left=root->left->data;
}
if(root->right){
        right=root->right->data;
}
if(root->data==left+right && children_sumproperty(root->left) && children_sumproperty(root->right) ){
        return 1;
}
else{
        return 0;
}


}





int main() {
bstnode* root=NULL;
root=getnewnode(10);
root->left=getnewnode(8);
root->right=getnewnode(2);
root->left->left=getnewnode(3);
root->left->right=getnewnode(5);
root->right->left=getnewnode(2);
   cout<<children_sumproperty(root);

}

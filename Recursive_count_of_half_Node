#include <iostream>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        return temp;
}
void  count_halfnode(bstnode* root,int* count){
if(root==NULL){
        return ;
}
else if(root->left==NULL && root->right!=NULL){
        *count=*count+1;
}
else if(root->left!=NULL && root->right==NULL){
        *count=*count+1;
}
count_halfnode(root->left,count);
count_halfnode(root->right,count);

}
bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}


int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);
root=insert(root,5);
root=insert(root,12);
int count=0;
count_halfnode(root,&count);
cout<<count;


}

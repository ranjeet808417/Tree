#include <iostream>
#include<queue>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
bstnode* nextright;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        temp->nextright=NULL;
        return temp;
}

bstnode* Extract_leavesOfBinaryTree(bstnode* root,bstnode** head){
if(root==NULL){
        return NULL;
}
root->right=Extract_leavesOfBinaryTree(root->right,head);
root->left=Extract_leavesOfBinaryTree(root->left,head);
if(root->left==NULL && root->right==NULL){
root->right=*head;
if(*head){
        (*head)->left=root;
}
*head=root;
}
return root;
}

bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}


int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);

  bstnode* head=NULL;
Extract_leavesOfBinaryTree(root,&head);
while(head){
        cout<<head->data<<" ";
        head=head->right;
}
}

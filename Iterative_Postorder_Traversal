#include <iostream>
#include<stack>
using namespace std;
struct bstnode{
int data;
bstnode* left;
bstnode* right;
};
bstnode* getnewnode(int data){
        bstnode* temp=new bstnode();
        temp->data=data;
        temp->left=NULL;
        temp->right=NULL;
        return temp;
}
stack<bstnode*>curr;
stack<bstnode*>postorder;
void postorder_traversal(bstnode* root){
curr.push(root);
while(!curr.empty()){
bstnode* temp=curr.top();
postorder.push(temp);
curr.pop();

if(temp->left){
        curr.push(temp->left);
}
if(temp->right){
curr.push(temp->right);
}
}

 

}


bstnode* insert(bstnode* root,int data){
if(root==NULL){
root=getnewnode(data);
}
else if(data<=root->data){
        root->left=insert(root->left,data);
}
else if(data >root->data){
root->right=insert(root->right,data);
}
return root;

}








int main() {
bstnode* root=NULL;
root=insert(root,8);
root=insert(root,3);
root=insert(root,10);
root=insert(root,1);
root=insert(root,6);
root=insert(root,14);
root=insert(root,4);
root=insert(root,7);
root=insert(root,13);
postorder_traversal(root);
while(!postorder.empty()){
cout<<postorder.top()->data<<" ";
postorder.pop();

}
}
